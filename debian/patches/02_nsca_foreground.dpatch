#! /bin/sh /usr/share/dpatch/dpatch-run
## 02_nsca_foreground.dpatch by  <seanius@debian.org>
##
## DP: allow nsca to run in the foreground, which makes
## DP: starting/stopping/restarting easier as we can use
## DP: external tools like s-s-d to track the pid

@DPATCH@
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' pkg-nsca~/src/nsca.c pkg-nsca/src/nsca.c
--- pkg-nsca~/src/nsca.c	2011-11-29 08:40:05.000000000 +0100
+++ pkg-nsca/src/nsca.c	2011-11-29 18:29:39.308036635 +0100
@@ -54,6 +54,8 @@
 int     show_license=FALSE;
 int     show_version=FALSE;
 
+int foreground=FALSE;
+
 int     sigrestart=FALSE;
 int     sigshutdown=FALSE;
 
@@ -112,10 +114,11 @@
 	        }
 
 	if(result!=OK || show_help==TRUE){
-                printf("Usage: %s -c <config_file> [mode]\n",argv[0]);
+                printf("Usage: %s -c <config_file> [-f] [mode]\n",argv[0]);
                 printf("\n");
                 printf("Options:\n");
 		printf(" <config_file> = Name of config file to use\n");
+		printf(" [-f]        = run in the foreground, do not fork\n");
 		printf(" [mode]        = Determines how NSCA should run. Valid modes:\n");
                 printf("   --inetd     = Run as a service under inetd or xinetd\n");
                 printf("   --daemon    = Run as a standalone multi-process daemon\n");
@@ -198,7 +201,7 @@
 		       V     */
 
                 /* daemonize and start listening for requests... */
-                if(fork()==0){
+		if(foreground || fork()==0){
 
                         /* we're a daemon - set up a new process group */
                         setsid();
@@ -1378,6 +1381,10 @@
 		else if(!strcmp(argv[x-1],"-V") || !strcmp(argv[x-1],"--version"))
 			show_version=TRUE;
 
+		/* run in the foreground */
+		else if(!strcmp(argv[x-1],"-f"))
+			foreground=TRUE;
+
 		else if(!strcmp(argv[x-1],"-d") || !strcmp(argv[x-1],"--daemon"))
                         mode=MULTI_PROCESS_DAEMON;
 
